name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  package-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install toml
  
    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/uv
          .venv
        key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install project dependencies
      run: uv sync  

    - name: Update version
      run: python scripts/update_version.py

    - name: Generate requirements.txt
      run: |
        uv export --format requirements-txt --output-file requirements.txt --no-hashes
        if [ $? -ne 0 ]; then
          echo "Failed to generate requirements.txt"
          exit 1
        fi

    - name: Commit version update
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add pyproject.toml requirements.txt src/friday/version.py app/package.json
        
        # Only commit if there are changes
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "chore: update version to $(git describe --tags --abbrev=0)"
          git pull --rebase origin main
          git push origin HEAD:main
        fi

    - name: Build and publish package
      run: |
        uv build
        uv publish --token ${{ secrets.PYPI_TOKEN }}

    - name: Create Cli Release
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  app-release:
    needs: [package-release]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: '*-artifacts'
          merge-multiple: true

      - name: Create App Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/*.dmg
            artifacts/**/*.zip
            artifacts/**/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  homebrew-release:
    needs: package-release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: main

    - name: Update Homebrew Formula
      run: |
        VERSION=$(git describe --tags --abbrev=0)
        TARBALL_URL="https://github.com/dipjyotimetia/friday/archive/refs/tags/${VERSION}.tar.gz"
        
        # Clone homebrew-friday repository
        git clone https://github.com/dipjyotimetia/homebrew-friday.git
        cd homebrew-friday
        
        # Download and calculate SHA
        curl -L -o release.tar.gz $TARBALL_URL
        SHA=$(sha256sum release.tar.gz | cut -d' ' -f1)
        
        # Update formula
        sed -i "s|url.*|url \"$TARBALL_URL\"|" Formula/friday.rb
        sed -i "s|sha256.*|sha256 \"$SHA\"|" Formula/friday.rb
        
        if [ -n "$(git status --porcelain)" ]; then
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add Formula/friday.rb
          git commit -m "chore: update friday formula to version ${VERSION}"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/dipjyotimetia/homebrew-friday.git main || {
            echo "Failed to push changes"
            exit 1
          }
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.HOME_BREW_TOKEN }}
