{
  "openapi": "3.1.0",
  "info": {
    "title": "Friday API",
    "description": "AI-powered testing agent with production-grade reliability",
    "version": "0.1.47"
  },
  "paths": {
    "/api/v1/generate": {
      "post": {
        "tags": [
          "Test Generation"
        ],
        "summary": "Generate Tests",
        "operationId": "generate_tests_api_v1_generate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/crawl": {
      "post": {
        "tags": [
          "Web Crawling"
        ],
        "summary": "Crawl Site",
        "operationId": "crawl_site_api_v1_crawl_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrawlRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health": {
      "get": {
        "tags": [
          "Health Check"
        ],
        "summary": "Health Check",
        "operationId": "health_check_api_v1_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/testapi": {
      "post": {
        "tags": [
          "API Testing"
        ],
        "summary": "Test Api",
        "description": "Run API tests using either a spec file path or uploaded spec file",
        "operationId": "test_api_api_v1_testapi_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_test_api_api_v1_testapi_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiTestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/browser-test/single": {
      "post": {
        "tags": [
          "Browser Testing",
          "browser-testing"
        ],
        "summary": "Run Single Browser Test",
        "description": "Run a single browser test using the browser-use agent",
        "operationId": "run_single_browser_test_api_v1_browser_test_single_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrowserTestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrowserTestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/browser-test/multiple": {
      "post": {
        "tags": [
          "Browser Testing",
          "browser-testing"
        ],
        "summary": "Run Multiple Browser Tests",
        "description": "Run multiple browser tests in sequence",
        "operationId": "run_multiple_browser_tests_api_v1_browser_test_multiple_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleBrowserTestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultipleBrowserTestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/browser-test/report": {
      "post": {
        "tags": [
          "Browser Testing",
          "browser-testing"
        ],
        "summary": "Generate Browser Test Report",
        "description": "Generate a test report from browser test results",
        "operationId": "generate_browser_test_report_api_v1_browser_test_report_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrowserTestReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrowserTestReportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/browser-test/health": {
      "get": {
        "tags": [
          "Browser Testing",
          "browser-testing"
        ],
        "summary": "Browser Test Health",
        "description": "Health check endpoint for browser testing service",
        "operationId": "browser_test_health_api_v1_browser_test_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiTestResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "total_tests": {
            "type": "integer",
            "title": "Total Tests"
          },
          "paths_tested": {
            "type": "integer",
            "title": "Paths Tested"
          },
          "passed_tests": {
            "type": "integer",
            "title": "Passed Tests"
          },
          "failed_tests": {
            "type": "integer",
            "title": "Failed Tests"
          },
          "error_tests": {
            "type": "integer",
            "title": "Error Tests"
          },
          "success_rate": {
            "type": "number",
            "title": "Success Rate"
          }
        },
        "type": "object",
        "required": [
          "message",
          "total_tests",
          "paths_tested",
          "passed_tests",
          "failed_tests",
          "error_tests",
          "success_rate"
        ],
        "title": "ApiTestResponse"
      },
      "Body_test_api_api_v1_testapi_post": {
        "properties": {
          "base_url": {
            "type": "string",
            "title": "Base Url",
            "description": "Base URL for API testing"
          },
          "output": {
            "type": "string",
            "title": "Output",
            "description": "Output file path",
            "default": "api_test_report.md"
          },
          "spec_file": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spec File",
            "description": "Path to OpenAPI spec file"
          },
          "spec_upload": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spec Upload",
            "description": "OpenAPI spec file upload"
          },
          "provider": {
            "type": "string",
            "enum": [
              "gemini",
              "openai",
              "ollama",
              "mistral"
            ],
            "title": "Provider",
            "description": "LLM Provider",
            "default": "openai"
          }
        },
        "type": "object",
        "required": [
          "base_url"
        ],
        "title": "Body_test_api_api_v1_testapi_post"
      },
      "BrowserTestCase": {
        "properties": {
          "requirement": {
            "type": "string",
            "title": "Requirement",
            "description": "Test requirement description"
          },
          "url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Url",
            "description": "Target URL to test"
          },
          "test_type": {
            "type": "string",
            "title": "Test Type",
            "description": "Type of test",
            "default": "functional"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context",
            "description": "Additional context",
            "default": ""
          },
          "take_screenshots": {
            "type": "boolean",
            "title": "Take Screenshots",
            "description": "Whether to take screenshots",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "requirement",
          "url"
        ],
        "title": "BrowserTestCase",
        "description": "Individual browser test case"
      },
      "BrowserTestReportRequest": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/BrowserTestResult"
            },
            "type": "array",
            "title": "Results",
            "description": "List of browser test results"
          }
        },
        "type": "object",
        "required": [
          "results"
        ],
        "title": "BrowserTestReportRequest",
        "description": "Request model for generating browser test report"
      },
      "BrowserTestReportResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Whether the report generation was successful"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Response message"
          },
          "report": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Report",
            "description": "Generated test report"
          },
          "summary": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary",
            "description": "Test execution summary"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if any"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "BrowserTestReportResponse",
        "description": "Response model for browser test report generation"
      },
      "BrowserTestRequest": {
        "properties": {
          "requirement": {
            "type": "string",
            "title": "Requirement",
            "description": "Test requirement description"
          },
          "url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Url",
            "description": "Target URL to test"
          },
          "test_type": {
            "type": "string",
            "title": "Test Type",
            "description": "Type of test (functional, ui, integration, etc.)",
            "default": "functional"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context",
            "description": "Additional context for the test",
            "default": ""
          },
          "headless": {
            "type": "boolean",
            "title": "Headless",
            "description": "Run browser in headless mode",
            "default": true
          },
          "take_screenshots": {
            "type": "boolean",
            "title": "Take Screenshots",
            "description": "Whether to take screenshots during execution",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "requirement",
          "url"
        ],
        "title": "BrowserTestRequest",
        "description": "Request model for browser testing"
      },
      "BrowserTestResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Whether the API call was successful"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Response message"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BrowserTestResult"
              },
              {
                "type": "null"
              }
            ],
            "description": "Test result data"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if any"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "BrowserTestResponse",
        "description": "Response model for browser test API"
      },
      "BrowserTestResult": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Test execution status"
          },
          "requirement": {
            "type": "string",
            "title": "Requirement",
            "description": "Test requirement that was executed"
          },
          "url": {
            "type": "string",
            "title": "Url",
            "description": "URL that was tested"
          },
          "test_type": {
            "type": "string",
            "title": "Test Type",
            "description": "Type of test that was executed"
          },
          "task_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Task Description",
            "description": "Generated task description"
          },
          "execution_result": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Result",
            "description": "Detailed execution result"
          },
          "screenshots": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Screenshots",
            "description": "List of screenshot paths/URLs",
            "default": []
          },
          "timestamp": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp",
            "description": "Execution timestamp"
          },
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Whether the test was successful"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors",
            "description": "List of errors if any",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "status",
          "requirement",
          "url",
          "test_type",
          "success"
        ],
        "title": "BrowserTestResult",
        "description": "Result model for browser test execution"
      },
      "CrawlRequest": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "default": "openai"
          },
          "max_pages": {
            "type": "integer",
            "title": "Max Pages",
            "default": 10
          },
          "same_domain": {
            "type": "boolean",
            "title": "Same Domain",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "CrawlRequest"
      },
      "GenerateRequest": {
        "properties": {
          "jira_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jira Key"
          },
          "gh_issue": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gh Issue"
          },
          "gh_repo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gh Repo"
          },
          "confluence_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confluence Id"
          },
          "template": {
            "type": "string",
            "title": "Template",
            "default": "test_case"
          },
          "output": {
            "type": "string",
            "title": "Output",
            "default": "test_cases.md"
          }
        },
        "type": "object",
        "title": "GenerateRequest"
      },
      "GenerateResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "GenerateResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "MultipleBrowserTestRequest": {
        "properties": {
          "test_cases": {
            "items": {
              "$ref": "#/components/schemas/BrowserTestCase"
            },
            "type": "array",
            "title": "Test Cases",
            "description": "List of browser test cases"
          },
          "headless": {
            "type": "boolean",
            "title": "Headless",
            "description": "Run browser in headless mode",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "test_cases"
        ],
        "title": "MultipleBrowserTestRequest",
        "description": "Request model for running multiple browser tests"
      },
      "MultipleBrowserTestResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Whether the API call was successful"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Response message"
          },
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/BrowserTestResult"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "description": "List of test results"
          },
          "report": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Report",
            "description": "Generated test report"
          },
          "summary": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary",
            "description": "Test execution summary"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if any"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "MultipleBrowserTestResponse",
        "description": "Response model for multiple browser tests API"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}